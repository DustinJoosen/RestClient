// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestClient.Orm;

#nullable disable

namespace RestClient.ORM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestClient.Orm.Models.Api", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Api");
                });

            modelBuilder.Entity("RestClient.Orm.Models.DataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DataModels");
                });

            modelBuilder.Entity("RestClient.Orm.Models.DataModelColumn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataModelId")
                        .HasColumnType("int");

                    b.Property<Guid>("DataModelId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("DataTypeId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Default")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<bool>("Unique")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DataModelId1");

                    b.HasIndex("DataTypeId1");

                    b.HasIndex("NormalizedName")
                        .IsUnique();

                    b.ToTable("DataModelColumns");
                });

            modelBuilder.Entity("RestClient.Orm.Models.DataType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Annotation")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DataTypes");
                });

            modelBuilder.Entity("RestClient.Orm.Models.Endpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApiId")
                        .HasColumnType("int");

                    b.Property<Guid>("ApiId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HttpMethod")
                        .HasColumnType("int");

                    b.Property<int>("InputModelId")
                        .HasColumnType("int");

                    b.Property<Guid>("InputModelId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("OutputModelId")
                        .HasColumnType("int");

                    b.Property<Guid>("OutputModelId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApiId1");

                    b.HasIndex("InputModelId1");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OutputModelId1");

                    b.ToTable("Endpoints");
                });

            modelBuilder.Entity("RestClient.Orm.Models.EndpointHeaderArgument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EndpointId")
                        .HasColumnType("int");

                    b.Property<Guid>("EndpointId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId1");

                    b.ToTable("EndpointHeaderArguments");
                });

            modelBuilder.Entity("RestClient.Orm.Models.EndpointQueryString", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Default")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndpointId")
                        .HasColumnType("int");

                    b.Property<Guid>("EndpointId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId1");

                    b.ToTable("EndpointQueryStrings");
                });

            modelBuilder.Entity("RestClient.Orm.Models.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndpointId")
                        .HasColumnType("int");

                    b.Property<Guid>("EndpointId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId1");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("RestClient.Orm.Models.DataModelColumn", b =>
                {
                    b.HasOne("RestClient.Orm.Models.DataModel", "DataModel")
                        .WithMany()
                        .HasForeignKey("DataModelId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestClient.Orm.Models.DataType", "DataType")
                        .WithMany("DataModelColumns")
                        .HasForeignKey("DataTypeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataModel");

                    b.Navigation("DataType");
                });

            modelBuilder.Entity("RestClient.Orm.Models.Endpoint", b =>
                {
                    b.HasOne("RestClient.Orm.Models.Api", "Api")
                        .WithMany("Endpoints")
                        .HasForeignKey("ApiId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestClient.Orm.Models.DataModel", "InputModel")
                        .WithMany()
                        .HasForeignKey("InputModelId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestClient.Orm.Models.DataModel", "OutputModel")
                        .WithMany()
                        .HasForeignKey("OutputModelId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Api");

                    b.Navigation("InputModel");

                    b.Navigation("OutputModel");
                });

            modelBuilder.Entity("RestClient.Orm.Models.EndpointHeaderArgument", b =>
                {
                    b.HasOne("RestClient.Orm.Models.Endpoint", "Endpoint")
                        .WithMany()
                        .HasForeignKey("EndpointId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");
                });

            modelBuilder.Entity("RestClient.Orm.Models.EndpointQueryString", b =>
                {
                    b.HasOne("RestClient.Orm.Models.Endpoint", "Endpoint")
                        .WithMany()
                        .HasForeignKey("EndpointId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");
                });

            modelBuilder.Entity("RestClient.Orm.Models.History", b =>
                {
                    b.HasOne("RestClient.Orm.Models.Endpoint", "Endpoint")
                        .WithMany()
                        .HasForeignKey("EndpointId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");
                });

            modelBuilder.Entity("RestClient.Orm.Models.Api", b =>
                {
                    b.Navigation("Endpoints");
                });

            modelBuilder.Entity("RestClient.Orm.Models.DataType", b =>
                {
                    b.Navigation("DataModelColumns");
                });
#pragma warning restore 612, 618
        }
    }
}
